// Function to generate and download the report
function downloadReport() {
    if (!currentAnalysisData) {
        alert("Please analyze a job offer first.");
        return;
    }

    const reportContent = `
ScamScreener Analysis Report
============================

Date: ${new Date().toLocaleString()}

Original Text:
--------------
${document.getElementById('jobOffer').value}

Analysis Summary:
-----------------
Scam Risk Score: ${Math.round(currentAnalysisData.confidence * 100)}%
Risk Level: ${currentAnalysisData.risk_level}
Recommendation: ${currentAnalysisData.recommendation}
${currentAnalysisData.suggested_action ? 'Suggested Action: ' + currentAnalysisData.suggested_action : ''}

Detailed Breakdown:
-------------------
Fraud Indicators Detected (${currentAnalysisData.indicator_count || 0}):
${currentAnalysisData.fraud_indicators && currentAnalysisData.fraud_indicators.length > 0 ? 
  currentAnalysisData.fraud_indicators.map(flag => `• ${flag}`).join('\n') : 
  '• None'}

Technical Details:
------------------
ML Score: ${currentAnalysisData.ml_score || 'N/A'}
Pattern Score: ${currentAnalysisData.pattern_score || 'N/A'}

---
Generated by ScamScreener - Protecting you from digital threats
`;

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `scamscreener_report_${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
}
